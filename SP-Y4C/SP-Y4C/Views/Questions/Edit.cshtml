@model EditQuestionViewModel
@{
    ViewData["Title"] = "Edit Question";
    var radioOptionId = (int)QuestionType.Radio;
}
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<h1><strong>@ViewData["Title"]</strong></h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post" id="edit-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="QuestionNumber" class="control-label"></label>
                <input asp-for="QuestionNumber" class="form-control" min="1" />
                <span asp-validation-for="QuestionNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="QuestionType" class="control-label"></label>
                <select asp-for="QuestionType" asp-items="Html.GetEnumSelectList<QuestionType>()" class="form-control" onchange="handleQuestionTypeChange();"></select>
                <span asp-validation-for="QuestionType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Text" class="control-label"></label>
                <input asp-for="Text" class="form-control" />
                <span asp-validation-for="Text" class="text-danger"></span>
            </div>

            @{ var hidden = Model.QuestionType != QuestionType.Radio; }

            @if (!hidden)
            {
                <div id="radio-options">
                    <label asp-for="@Model.RadioOptions" class="control-label"></label>
                    <button type="button" class="btn btn-primary btn-xs" id="btnAddChoice" onclick="addChoice()">+</button>

                    @for (int i = 0; i < Model.RadioOptions.Count; i++)
                    {
                        var parentId = $"existing-choice-{i}";

                        <div class="form-group radio-option-parent" id="@parentId">
                            <label asp-for="@Model.RadioOptions[i]" class="control-label">Choice</label>
                            <div class="input-group">
                                <input asp-for="@Model.RadioOptions[i]" type="text" class="form-control" />
                                <div class="input-group-btn">
                                    <button type="button" id="btnRemoveChoice" class="btn btn-danger" onclick="removeChoice('@parentId')">-</button>
                                </div>
                            </div>
                        </div>
                    }
                    <input id="jake-easter-egg" value="reeses-cup" name="you-win" type="hidden" />
                </div>
            }
            else
            {
                <div id="radio-options" style="display: none;">
                    <label asp-for="@Model.RadioOptions" class="control-label"></label>
                    <button type="button" class="btn btn-primary btn-xs" id="btnAddChoice" onclick="addChoice()">+</button>
                    <input id="jake-easter-egg" value="reeses-cup" name="you-win" type="hidden" />
                </div>
            }


            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
                <select asp-for="Weight" asp-items="Html.GetEnumSelectList<QuestionWeight>()" class="form-control"></select>
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category" asp-items="Html.GetEnumSelectList<QuestionCategory>()" class="form-control"></select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button class="btn btn-danger" type="button" onclick="location.href='@Url.Action("Index", "Questions")'">Cancel</button>

                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                    Save
                </button>

                <!-- Modal -->
                <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Confirm Save Event</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                Are you sure you would like to save the changes made?
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                <input type="button" value="Save changes" class="btn btn-primary" onclick="handleSubmit()" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var choiceCount = 0;
        var nextIndex = 0;
        var radioId = @radioOptionId;

        function addChoice() {
            choiceCount += 1

            let formGroupId = `new-choice-${choiceCount}`;

            let weight = document.getElementById('jake-easter-egg');

            let formGroup = document.createElement("div");
            formGroup.className = "form-group radio-option-parent";
            formGroup.id = formGroupId;

            let label = document.createElement("label");
            label.className = "control-label";
            label.innerText = `Choice`; //${choiceCount} scrapped this to avoid visual confusion

            let inputGroup = document.createElement("div");
            inputGroup.className = "input-group";

            let input = document.createElement("input");
            input.type = "text";
            input.className = "form-control choices";
            input.id = nextIndex;


            let inputGroupBtn = document.createElement("div");
            inputGroupBtn.className = "input-group-btn";

            let btnSubtract = document.createElement("button");
            btnSubtract.type = "button";
            btnSubtract.id = "btnRemoveChoice";
            btnSubtract.className = "btn btn-danger";
            btnSubtract.innerText = "-";
            btnSubtract.onclick = function () { removeChoice(formGroupId) };

            inputGroupBtn.appendChild(btnSubtract);
            inputGroup.appendChild(input);
            inputGroup.appendChild(inputGroupBtn);
            formGroup.appendChild(label);
            formGroup.appendChild(inputGroup);
            weight.before(formGroup);
        }

        function removeChoice(formGroupId) {
            var formGroup = document.getElementById(formGroupId);
            formGroup.remove();
            choiceCount -= 1;
        }

        function handleQuestionTypeChange() {
            var selectList = get("#QuestionType");
            var selectedValue = selectList.value;

            if (selectedValue == radioId) {
                show("radio-options"); // TODO.DOINK - FIND MY EASTER EGG!
            } else {
                var options = document.querySelectorAll(".radio-option-parent");

                for (var i = 0; i < options.length; i++){
                    options[i].remove();
                }

                hide("radio-options");
            }
        }

        function handleSubmit() {
            var inputs = document.getElementsByClassName('choices');

            for (var i = 0; i < inputs.length; i++) {
                inputs[i].name = `radioOptions[${i}]`;
            }

            document.getElementById('edit-form').submit();
        }

        function get(selector) {
            if (!selector) {
                console.log("Element not found. No selector provided.");
                return;
            }

            let result = document.querySelector(selector);
            if (!result) {
                console.log(`Element not found: "${selector}"`);
                return;
            }

            return result;
        }

        function show(id) {
            var element = get(`#${id}`);

            if (element) {
                element.style.display = "block";
            }
        }

        function hide(id) {
            var element = get(`#${id}`);

            if (element) {
                element.style.display = "none";
            }
        }
    </script>
}