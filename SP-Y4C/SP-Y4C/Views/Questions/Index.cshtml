@model IQueryable<SurveyQuestion>
@{
    ViewData["Title"] = "Engagement Survey - Active Questions";
}


<head>
    <link rel="stylesheet" href="~/css/survey-flow.css" asp-append-version="true" />
</head>

<body>
    <h1 style="text-align: center;"><strong>@ViewData["Title"]</strong></h1>

    <h2><strong>Survey Flow</strong></h2>
    <ul class="tree">
        <li class="tree__item">
            <span style="font-size: x-large">
                <a>TEACHING</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Teach))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            @if (question.Choices.Count == 0 && question.TypeId != QuestionType.Text)
                            {
                                if (question.Weight == QuestionWeight.Yes)
                                {
                                    <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:#000000;">@question.Text</a>
                                }
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:red;">@question.Text</a>
                            }
                            else
                            {
                                if (question.Weight == QuestionWeight.Yes)
                                {
                                    <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:#000000;">@question.Text</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })">@question.Text</a>
                                }
                            }
                        </span>
                        <ul>
                            @foreach (var c in question.Choices.OrderBy(c => c.OrderInQuestion))
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }



        <li class="tree__item">
            <span style="font-size:x-large">
                <a>PRACTICE</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Practice))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            @if (question.Choices.Count == 0 && question.TypeId != QuestionType.Text)
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:red;">@question.Text</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })">@question.Text</a>
                            }
                        </span>
                        <ul>
                            @foreach (var c in question.Choices.OrderBy(c => c.OrderInQuestion))
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }



        <li class="tree__item">
            <span style="font-size:x-large">
                <a>OTHER</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Other))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            @if (question.Choices.Count == 0 && question.TypeId != QuestionType.Text)
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:red;">@question.Text</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })">@question.Text</a>
                            }
                        </span>
                        <ul>
                            @foreach (var c in question.Choices.OrderBy(c => c.OrderInQuestion))
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }



        <li class="tree__item">
            <span style="font-size:x-large">
                <a>NONE</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.None))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            @if (question.Choices.Count == 0 && question.TypeId != QuestionType.Text)
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:red;">@question.Text</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })">@question.Text</a>
                            }
                        </span>
                        <ul>
                            @foreach (var c in question.Choices.OrderBy(c => c.OrderInQuestion))
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }





        <li class="tree__item">
            <span style="font-size:x-large">
                <a>DEFAULT</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Default))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            @if (question.Choices.Count == 0 && question.TypeId != QuestionType.Text)
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })" style="color:red;">@question.Text</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Edit", "Questions", new { id = @question.Id })">@question.Text</a>
                            }
                        </span>
                        <ul>
                            @foreach (var c in question.Choices.OrderBy(c => c.OrderInQuestion))
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }

    </ul>

    <h2><strong>Survey Questions</strong></h2>
    <button class="btn btn-primary" type="button" onclick="location.href='@Url.Action("Create", "Questions")'">Create</button>
    <br />
    <br />
    <table id="example" class="table table-striped table-bordered dt-responsive" style="table-layout: auto;width: 100%;" cellspacing="0">
        <thead>
            <tr>
                <th><label asp-for="@Model.FirstOrDefault().Category"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().QuestionNumber"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().TypeId"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().Text"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().CreatedAtUtc"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().Weight"></label></th>
                <th><label>Actions</label></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var question in Model)
            {
                var modalId = $"modal-{question.Id}";
                <tr>
                    <td>@question.Category</td>
                    <td>@question.QuestionNumber</td>
                    <td>@question.TypeId.ToString()</td>
                    <td>@question.Text</td>
                    <td>@question.CreatedAtUtc.LocalDateTime</td>
                    <td>@question.Weight</td>
                    <td>
                        <button class="btn btn-primary" id="edit-question-@question.Id" type="button" onclick="location.href='@Url.Action("Edit", "Questions", new { id = @question.Id })'">Edit</button>

                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#@modalId">
                            Archive
                        </button>

                        <!-- Modal  -->
                        <div class="modal fade" id="@modalId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Confirm Archive Event</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure you want to archive this question? Restoration after an archive is not supported.
                                        You will need to create a new question in the event this one is needed in the future.
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                        <button type="button" class="btn btn-primary" id="archive-question-@question.Id" onclick="location.href='@Url.Action("Archive", "Questions", new { id = @question.Id })'">Archive</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>

<script>
    $(document).ready(function () {
        let table = $("#example").DataTable({
            "processing": true, // for show progress bar
            "serverSide": false, // for process server side
            "filter": true, // this is for disable filter (search box)
            "pageLength": 10,
            "dom": '<"top"Bf>rt<"bottom"pi>',
            "buttons": ['excelHtml5', 'print']
        });
        console.log(table);
    });

    //Needed to style the datatable buttons
    $(document).ready(function () {
        $('button').addClass("btn btn-primary");

        console.log(document.getElementsByClassName('paginate_button active'));

        document.getElementById('example_previous').addEventListener("click", testPrev);
        document.getElementById('example_next').addEventListener("click", testNext);
        var table = $('#example').DataTable();
        var currentIndex = 0;
        function testPrev() {
            var info = table.page.info();
            currentIndex = info.page + 1;
            console.log(currentIndex);
            console.log(
                'Currently showing PREV page ' + (info.page + 1) + ' of ' + info.pages + ' pages.'
            );
            document.getElementById('example_previous').addEventListener("click", testPrev);
        }
        function testNext() {
            var info = table.page.info();
            currentIndex = info.page + 1;
            console.log(currentIndex);
            console.log(
                'Currently showing NEXT page ' + (info.page + 1) + ' of ' + info.pages + ' pages.'
            );
            document.getElementById('example_next').addEventListener("click", testNext);
        }
    });
</script>

<script>
    $('.tree .icon').click(function () {
        $(this).parent().toggleClass('expanded').
            closest('li').find('ul:first').
            toggleClass('show-effect');
    });
</script>
