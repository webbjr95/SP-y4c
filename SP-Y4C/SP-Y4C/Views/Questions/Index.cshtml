@model IQueryable<SurveyQuestion>
@{
    ViewData["Title"] = "Engagement Survey - Active Questions";
}

<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

<style>
    a {
        text-decoration: none;
    }

    ul.tree, .tree li {
        list-style: none;
        margin: 0;
        padding: 0;
        cursor: pointer;
    }

    .tree ul {
        display: none;
    }

    .tree > li {
        display: block;
        background: #eee;
        margin-bottom: 2px;
    }

    .tree span {
        display: block;
        padding: 10px 12px;
    }

    .icon {
        display: inline-block;
    }

    .tree .hasChildren > .expanded {
        background: #999;
    }

        .tree .hasChildren > .expanded a {
            color: #fff;
        }

    .icon:before {
        content: "+";
        display: inline-block;
        min-width: 20px;
        text-align: center;
    }

    .tree .icon.expanded:before {
        content: "-";
    }

    .show-effect {
        display: block !important;
    }


    .dataTables_info {
        text-align: right;
    }
</style>

<body>
    <h1><strong>@ViewData["Title"]</strong></h1>

    <h2><strong>Question Flow</strong></h2>
    <ul class="tree">
        <li class="tree__item">
            <span style="font-size: x-large">
                <a>TEACHING</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Teach))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            <a href="#">@question.Text</a>
                        </span>
                        <ul>
                            @foreach (var c in question.Choices)
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }



        <li class="tree__item">
            <span style="font-size:x-large">
                <a>PRACTICE</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Practice))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            <a href="#">@question.Text</a>
                        </span>
                        <ul>
                            @foreach (var c in question.Choices)
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }



        <li class="tree__item">
            <span style="font-size:x-large">
                <a>OTHER</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Other))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            <a href="#">@question.Text</a>
                        </span>
                        <ul>
                            @foreach (var c in question.Choices)
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }



        <li class="tree__item">
            <span style="font-size:x-large">
                <a>NONE</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.None))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            <a href="#">@question.Text</a>
                        </span>
                        <ul>
                            @foreach (var c in question.Choices)
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }





        <li class="tree__item">
            <span style="font-size:x-large">
                <a>DEFAULT</a>
            </span>
        </li>
        @{
            foreach (var question in Model)
            {
                if (question.Category.Equals(QuestionCategory.Default))
                {
                    <li class="tree__item hasChildren">
                        <span>
                            <div class="icon"></div>
                            <a href="#">@question.Text</a>
                        </span>
                        <ul>
                            @foreach (var c in question.Choices)
                            {
                                <li>
                                    <span><a href="">@c.Text</a></span>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }
        }

    </ul>


    <script>
        $('.tree .icon').click(function () {
            $(this).parent().toggleClass('expanded').
                closest('li').find('ul:first').
                toggleClass('show-effect');
        });
    </script>



    <h2><strong>Question Bank</strong></h2>
    <button class="btn btn-primary" type="button" onclick="location.href='@Url.Action("Create", "Questions")'">Create</button>
    <br />
    <br />
    <table id="example" class="table table-striped table-bordered dt-responsive" style="table-layout: auto;width: 100%;" cellspacing="0">
        <thead>
            <tr>
                <th><label asp-for="@Model.FirstOrDefault().ActiveStatus"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().QuestionNumber"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().TypeId"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().Text"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().CreatedAtUtc"></label></th>
                <th><label asp-for="@Model.FirstOrDefault().Weight"></label></th>
                <th><label>Actions</label></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var question in Model)
            {
                var modalId = $"modal-{question.Id}";
                <tr>
                    <td>@question.ActiveStatus</td>
                    <td>@question.QuestionNumber</td>
                    <td>@question.TypeId.ToString()</td>
                    <td width="50%">@question.Text</td>
                    <td>@question.CreatedAtUtc.LocalDateTime</td>
                    <td>@question.Weight</td>
                    <td>
                        <button class="btn btn-primary" id="edit-question-@question.Id" type="button" onclick="location.href='@Url.Action("Edit", "Questions", new { id = @question.Id })'">Edit</button>

                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#@modalId">
                            Archive
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="@modalId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Confirm Archive Event</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        Are you sure you want to archive this question? Restoration after an archive is not supported. 
                                        You will need to create a new question in the event this one is needed in the future.
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                        <button type="button" class="btn btn-primary" id="archive-question-@question.Id" onclick="location.href='@Url.Action("Archive", "Questions", new { id = @question.Id })'">Archive</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>


    @*<div id="dialog" title="Confirmation Required">
            Are you sure about this?
        </div>
        <button class="lb">test</button>

        <script>
            $(document).ready(function () {
                $("#dialog").dialog({
                    modal: true,
                    bgiframe: true,
                    width: 500,
                    height: 200,
                    autoOpen: false
                });


                $(".lb").click(function (e) {

                    e.preventDefault();
                    var theHREF = $(this).attr("href");

                    $("#dialog").dialog('option', 'buttons', {
                        "Confirm": function () {
                            window.location.href = theHREF;
                        },
                        "Cancel": function () {
                            $(this).dialog("close");
                        }
                    });

                    $("#dialog").dialog("open");

                });

            });
        </script>*@

    <script>


        $(document).ready(function () {
            $("#example").DataTable({
                "processing": true, // for show progress bar
                "serverSide": false, // for process server side
                "filter": true, // this is for disable filter (search box)
                "pageLength": 50,
                "dom": '<"top"Bf>rt<"bottom"pi>',
                "buttons": ['excelHtml5', 'print']
            });
        });

        //Needed to style the datatable buttons
        $(document).ready(function () {
            $('button').addClass("btn btn-primary");
            $('button').removeClass("dt-button");
        });
    </script>
</body>
